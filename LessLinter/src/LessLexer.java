// Generated from LessLexer.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LessLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NULL=1, IN=2, Unit=3, COMBINE_COMPARE=4, Ellipsis=5, InterpolationStart=6, 
		LPAREN=7, RPAREN=8, BlockStart=9, BlockEnd=10, LBRACK=11, RBRACK=12, GT=13, 
		TIL=14, LT=15, COLON=16, SEMI=17, COMMA=18, DOT=19, DOLLAR=20, AT=21, 
		AND=22, HASH=23, COLONCOLON=24, PLUS=25, TIMES=26, DIV=27, MINUS=28, PERC=29, 
		UrlStart=30, EQEQ=31, NOTEQ=32, EQ=33, PIPE_EQ=34, TILD_EQ=35, WHEN=36, 
		IMPORT=37, FONTFACE=38, Identifier=39, StringLiteral=40, Number=41, Color=42, 
		WS=43, NL=44, SL_COMMENT=45, COMMENT=46, UrlEnd=47, Url=48, InterpolationStartAfter=49, 
		IdentifierAfter=50;
	public static final int URL_STARTED = 1;
	public static final int IDENTIFY = 2;
	public static String[] modeNames = {
		"DEFAULT_MODE", "URL_STARTED", "IDENTIFY"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'"
	};
	public static final String[] ruleNames = {
		"NULL", "IN", "Unit", "COMBINE_COMPARE", "Ellipsis", "InterpolationStart", 
		"LPAREN", "RPAREN", "BlockStart", "BlockEnd", "LBRACK", "RBRACK", "GT", 
		"TIL", "LT", "COLON", "SEMI", "COMMA", "DOT", "DOLLAR", "AT", "AND", "HASH", 
		"COLONCOLON", "PLUS", "TIMES", "DIV", "MINUS", "PERC", "UrlStart", "EQEQ", 
		"NOTEQ", "EQ", "PIPE_EQ", "TILD_EQ", "WHEN", "IMPORT", "FONTFACE", "Identifier", 
		"STRING", "StringLiteral", "Number", "Color", "WS", "NL", "SL_COMMENT", 
		"COMMENT", "UrlEnd", "Url", "SPACE_ID", "NEW_LINE_ID", "DOLLAR_ID", "InterpolationStartAfter", 
		"InterpolationEnd_ID", "IdentifierAfter", "Ellipsis_ID", "DOT_ID", "LPAREN_ID", 
		"RPAREN_ID", "COLON_ID", "COMMA_ID", "SEMI_ID"
	};


	public LessLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LessLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u01dd\b\1\b\1"+
		"\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4"+
		"\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t"+
		"\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t"+
		"\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t"+
		"\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4"+
		"*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63"+
		"\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;"+
		"\4<\t<\4=\t=\4>\t>\4?\t?\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u00ad\n\4"+
		"\3\5\3\5\3\5\3\5\5\5\u00b3\n\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b"+
		"\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20"+
		"\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27"+
		"\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3"+
		"\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\7(\u011d\n(\f(\16(\u0120"+
		"\13(\3(\3(\3(\7(\u0125\n(\f(\16(\u0128\13(\5(\u012a\n(\3(\3(\3)\3)\7)"+
		"\u0130\n)\f)\16)\u0133\13)\3)\3)\3)\7)\u0138\n)\f)\16)\u013b\13)\3)\5"+
		")\u013e\n)\3*\3*\3+\3+\7+\u0144\n+\f+\16+\u0147\13+\3+\5+\u014a\n+\3+"+
		"\6+\u014d\n+\r+\16+\u014e\3+\7+\u0152\n+\f+\16+\u0155\13+\3+\5+\u0158"+
		"\n+\3+\6+\u015b\n+\r+\16+\u015c\5+\u015f\n+\3,\3,\6,\u0163\n,\r,\16,\u0164"+
		"\3-\6-\u0168\n-\r-\16-\u0169\3-\3-\3.\3.\3.\6.\u0171\n.\r.\16.\u0172\3"+
		".\3.\3/\3/\3/\3/\7/\u017b\n/\f/\16/\u017e\13/\3/\3/\3/\5/\u0183\n/\5/"+
		"\u0185\n/\3/\3/\3\60\3\60\3\60\3\60\7\60\u018d\n\60\f\60\16\60\u0190\13"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\6\62\u019d"+
		"\n\62\r\62\16\62\u019e\5\62\u01a1\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3"+
		"\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"\67\3\67\38\38\39\39\39\39\39\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3"+
		"<\3<\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3\u018e\2@\5\3\7\4\t"+
		"\5\13\6\r\7\17\b\21\t\23\n\25\13\27\f\31\r\33\16\35\17\37\20!\21#\22%"+
		"\23\'\24)\25+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37? A!C\"E#"+
		"G$I%K&M\'O(Q)S\2U*W+Y,[-]._/a\60c\61e\62g\2i\2k\2m\63o\2q\64s\2u\2w\2"+
		"y\2{\2}\2\177\2\5\2\3\4\n\6\2C\\aac|\u0102\0\b\2//\62;C\\aac|\u0102\0"+
		"\5\2\f\f\17\17$$\5\2\f\f\17\17))\5\2\62;CHch\4\2\13\f\17\17\4\2\f\f\17"+
		"\17\6\2\f\f\17\17++==\u0200\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2"+
		"a\3\2\2\2\3c\3\2\2\2\3e\3\2\2\2\4g\3\2\2\2\4i\3\2\2\2\4k\3\2\2\2\4m\3"+
		"\2\2\2\4o\3\2\2\2\4q\3\2\2\2\4s\3\2\2\2\4u\3\2\2\2\4w\3\2\2\2\4y\3\2\2"+
		"\2\4{\3\2\2\2\4}\3\2\2\2\4\177\3\2\2\2\5\u0081\3\2\2\2\7\u0086\3\2\2\2"+
		"\t\u00ac\3\2\2\2\13\u00b2\3\2\2\2\r\u00b4\3\2\2\2\17\u00b8\3\2\2\2\21"+
		"\u00bd\3\2\2\2\23\u00bf\3\2\2\2\25\u00c1\3\2\2\2\27\u00c3\3\2\2\2\31\u00c5"+
		"\3\2\2\2\33\u00c7\3\2\2\2\35\u00c9\3\2\2\2\37\u00cb\3\2\2\2!\u00cd\3\2"+
		"\2\2#\u00cf\3\2\2\2%\u00d1\3\2\2\2\'\u00d3\3\2\2\2)\u00d5\3\2\2\2+\u00d7"+
		"\3\2\2\2-\u00d9\3\2\2\2/\u00db\3\2\2\2\61\u00dd\3\2\2\2\63\u00df\3\2\2"+
		"\2\65\u00e2\3\2\2\2\67\u00e4\3\2\2\29\u00e6\3\2\2\2;\u00e8\3\2\2\2=\u00ea"+
		"\3\2\2\2?\u00ec\3\2\2\2A\u00f4\3\2\2\2C\u00f7\3\2\2\2E\u00fa\3\2\2\2G"+
		"\u00fc\3\2\2\2I\u00ff\3\2\2\2K\u0102\3\2\2\2M\u0107\3\2\2\2O\u010f\3\2"+
		"\2\2Q\u0129\3\2\2\2S\u013d\3\2\2\2U\u013f\3\2\2\2W\u015e\3\2\2\2Y\u0160"+
		"\3\2\2\2[\u0167\3\2\2\2]\u0170\3\2\2\2_\u0176\3\2\2\2a\u0188\3\2\2\2c"+
		"\u0196\3\2\2\2e\u01a0\3\2\2\2g\u01a2\3\2\2\2i\u01a8\3\2\2\2k\u01ae\3\2"+
		"\2\2m\u01b2\3\2\2\2o\u01b4\3\2\2\2q\u01b8\3\2\2\2s\u01ba\3\2\2\2u\u01bf"+
		"\3\2\2\2w\u01c4\3\2\2\2y\u01c9\3\2\2\2{\u01ce\3\2\2\2}\u01d3\3\2\2\2\177"+
		"\u01d8\3\2\2\2\u0081\u0082\7p\2\2\u0082\u0083\7w\2\2\u0083\u0084\7n\2"+
		"\2\u0084\u0085\7n\2\2\u0085\6\3\2\2\2\u0086\u0087\7k\2\2\u0087\u0088\7"+
		"p\2\2\u0088\b\3\2\2\2\u0089\u00ad\7\'\2\2\u008a\u008b\7r\2\2\u008b\u00ad"+
		"\7z\2\2\u008c\u008d\7e\2\2\u008d\u00ad\7o\2\2\u008e\u008f\7o\2\2\u008f"+
		"\u00ad\7o\2\2\u0090\u0091\7k\2\2\u0091\u00ad\7p\2\2\u0092\u0093\7r\2\2"+
		"\u0093\u00ad\7v\2\2\u0094\u0095\7r\2\2\u0095\u00ad\7e\2\2\u0096\u0097"+
		"\7g\2\2\u0097\u00ad\7o\2\2\u0098\u0099\7g\2\2\u0099\u00ad\7z\2\2\u009a"+
		"\u009b\7f\2\2\u009b\u009c\7g\2\2\u009c\u00ad\7i\2\2\u009d\u009e\7t\2\2"+
		"\u009e\u009f\7c\2\2\u009f\u00ad\7f\2\2\u00a0\u00a1\7i\2\2\u00a1\u00a2"+
		"\7t\2\2\u00a2\u00a3\7c\2\2\u00a3\u00ad\7f\2\2\u00a4\u00a5\7o\2\2\u00a5"+
		"\u00ad\7u\2\2\u00a6\u00ad\7u\2\2\u00a7\u00a8\7j\2\2\u00a8\u00ad\7|\2\2"+
		"\u00a9\u00aa\7m\2\2\u00aa\u00ab\7j\2\2\u00ab\u00ad\7|\2\2\u00ac\u0089"+
		"\3\2\2\2\u00ac\u008a\3\2\2\2\u00ac\u008c\3\2\2\2\u00ac\u008e\3\2\2\2\u00ac"+
		"\u0090\3\2\2\2\u00ac\u0092\3\2\2\2\u00ac\u0094\3\2\2\2\u00ac\u0096\3\2"+
		"\2\2\u00ac\u0098\3\2\2\2\u00ac\u009a\3\2\2\2\u00ac\u009d\3\2\2\2\u00ac"+
		"\u00a0\3\2\2\2\u00ac\u00a4\3\2\2\2\u00ac\u00a6\3\2\2\2\u00ac\u00a7\3\2"+
		"\2\2\u00ac\u00a9\3\2\2\2\u00ad\n\3\2\2\2\u00ae\u00af\7(\2\2\u00af\u00b3"+
		"\7(\2\2\u00b0\u00b1\7~\2\2\u00b1\u00b3\7~\2\2\u00b2\u00ae\3\2\2\2\u00b2"+
		"\u00b0\3\2\2\2\u00b3\f\3\2\2\2\u00b4\u00b5\7\60\2\2\u00b5\u00b6\7\60\2"+
		"\2\u00b6\u00b7\7\60\2\2\u00b7\16\3\2\2\2\u00b8\u00b9\5\61\30\2\u00b9\u00ba"+
		"\5\25\n\2\u00ba\u00bb\3\2\2\2\u00bb\u00bc\b\7\2\2\u00bc\20\3\2\2\2\u00bd"+
		"\u00be\7*\2\2\u00be\22\3\2\2\2\u00bf\u00c0\7+\2\2\u00c0\24\3\2\2\2\u00c1"+
		"\u00c2\7}\2\2\u00c2\26\3\2\2\2\u00c3\u00c4\7\177\2\2\u00c4\30\3\2\2\2"+
		"\u00c5\u00c6\7]\2\2\u00c6\32\3\2\2\2\u00c7\u00c8\7_\2\2\u00c8\34\3\2\2"+
		"\2\u00c9\u00ca\7@\2\2\u00ca\36\3\2\2\2\u00cb\u00cc\7\u0080\2\2\u00cc "+
		"\3\2\2\2\u00cd\u00ce\7>\2\2\u00ce\"\3\2\2\2\u00cf\u00d0\7<\2\2\u00d0$"+
		"\3\2\2\2\u00d1\u00d2\7=\2\2\u00d2&\3\2\2\2\u00d3\u00d4\7.\2\2\u00d4(\3"+
		"\2\2\2\u00d5\u00d6\7\60\2\2\u00d6*\3\2\2\2\u00d7\u00d8\7&\2\2\u00d8,\3"+
		"\2\2\2\u00d9\u00da\7B\2\2\u00da.\3\2\2\2\u00db\u00dc\7(\2\2\u00dc\60\3"+
		"\2\2\2\u00dd\u00de\7%\2\2\u00de\62\3\2\2\2\u00df\u00e0\7<\2\2\u00e0\u00e1"+
		"\7<\2\2\u00e1\64\3\2\2\2\u00e2\u00e3\7-\2\2\u00e3\66\3\2\2\2\u00e4\u00e5"+
		"\7,\2\2\u00e58\3\2\2\2\u00e6\u00e7\7\61\2\2\u00e7:\3\2\2\2\u00e8\u00e9"+
		"\7/\2\2\u00e9<\3\2\2\2\u00ea\u00eb\7\'\2\2\u00eb>\3\2\2\2\u00ec\u00ed"+
		"\7w\2\2\u00ed\u00ee\7t\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0\3\2\2\2\u00f0"+
		"\u00f1\5\21\b\2\u00f1\u00f2\3\2\2\2\u00f2\u00f3\b\37\3\2\u00f3@\3\2\2"+
		"\2\u00f4\u00f5\7?\2\2\u00f5\u00f6\7?\2\2\u00f6B\3\2\2\2\u00f7\u00f8\7"+
		"#\2\2\u00f8\u00f9\7?\2\2\u00f9D\3\2\2\2\u00fa\u00fb\7?\2\2\u00fbF\3\2"+
		"\2\2\u00fc\u00fd\7~\2\2\u00fd\u00fe\7?\2\2\u00feH\3\2\2\2\u00ff\u0100"+
		"\7\u0080\2\2\u0100\u0101\7?\2\2\u0101J\3\2\2\2\u0102\u0103\7y\2\2\u0103"+
		"\u0104\7j\2\2\u0104\u0105\7g\2\2\u0105\u0106\7p\2\2\u0106L\3\2\2\2\u0107"+
		"\u0108\7B\2\2\u0108\u0109\7k\2\2\u0109\u010a\7o\2\2\u010a\u010b\7r\2\2"+
		"\u010b\u010c\7q\2\2\u010c\u010d\7t\2\2\u010d\u010e\7v\2\2\u010eN\3\2\2"+
		"\2\u010f\u0110\7B\2\2\u0110\u0111\7h\2\2\u0111\u0112\7q\2\2\u0112\u0113"+
		"\7p\2\2\u0113\u0114\7v\2\2\u0114\u0115\7/\2\2\u0115\u0116\7h\2\2\u0116"+
		"\u0117\7c\2\2\u0117\u0118\7e\2\2\u0118\u0119\7g\2\2\u0119P\3\2\2\2\u011a"+
		"\u011e\t\2\2\2\u011b\u011d\t\3\2\2\u011c\u011b\3\2\2\2\u011d\u0120\3\2"+
		"\2\2\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u012a\3\2\2\2\u0120"+
		"\u011e\3\2\2\2\u0121\u0122\7/\2\2\u0122\u0126\t\2\2\2\u0123\u0125\t\3"+
		"\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126"+
		"\u0127\3\2\2\2\u0127\u012a\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u011a\3\2"+
		"\2\2\u0129\u0121\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u012c\b(\2\2\u012c"+
		"R\3\2\2\2\u012d\u0131\7$\2\2\u012e\u0130\n\4\2\2\u012f\u012e\3\2\2\2\u0130"+
		"\u0133\3\2\2\2\u0131\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2"+
		"\2\2\u0133\u0131\3\2\2\2\u0134\u013e\7$\2\2\u0135\u0139\7)\2\2\u0136\u0138"+
		"\n\5\2\2\u0137\u0136\3\2\2\2\u0138\u013b\3\2\2\2\u0139\u0137\3\2\2\2\u0139"+
		"\u013a\3\2\2\2\u013a\u013c\3\2\2\2\u013b\u0139\3\2\2\2\u013c\u013e\7)"+
		"\2\2\u013d\u012d\3\2\2\2\u013d\u0135\3\2\2\2\u013eT\3\2\2\2\u013f\u0140"+
		"\5S)\2\u0140V\3\2\2\2\u0141\u0149\7/\2\2\u0142\u0144\4\62;\2\u0143\u0142"+
		"\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146"+
		"\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u014a\7\60\2\2\u0149\u0145\3"+
		"\2\2\2\u0149\u014a\3\2\2\2\u014a\u014c\3\2\2\2\u014b\u014d\4\62;\2\u014c"+
		"\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2"+
		"\2\2\u014f\u015f\3\2\2\2\u0150\u0152\4\62;\2\u0151\u0150\3\2\2\2\u0152"+
		"\u0155\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2"+
		"\2\2\u0155\u0153\3\2\2\2\u0156\u0158\7\60\2\2\u0157\u0153\3\2\2\2\u0157"+
		"\u0158\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u015b\4\62;\2\u015a\u0159\3\2"+
		"\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d"+
		"\u015f\3\2\2\2\u015e\u0141\3\2\2\2\u015e\u0157\3\2\2\2\u015fX\3\2\2\2"+
		"\u0160\u0162\7%\2\2\u0161\u0163\t\6\2\2\u0162\u0161\3\2\2\2\u0163\u0164"+
		"\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165Z\3\2\2\2\u0166"+
		"\u0168\7\"\2\2\u0167\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u0167\3\2"+
		"\2\2\u0169\u016a\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u016c\b-\4\2\u016c"+
		"\\\3\2\2\2\u016d\u0171\t\7\2\2\u016e\u016f\7\17\2\2\u016f\u0171\7\f\2"+
		"\2\u0170\u016d\3\2\2\2\u0170\u016e\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0170"+
		"\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0175\b.\4\2\u0175"+
		"^\3\2\2\2\u0176\u0177\7\61\2\2\u0177\u0178\7\61\2\2\u0178\u017c\3\2\2"+
		"\2\u0179\u017b\n\b\2\2\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017a"+
		"\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u0184\3\2\2\2\u017e\u017c\3\2\2\2\u017f"+
		"\u0185\7\f\2\2\u0180\u0182\7\17\2\2\u0181\u0183\7\f\2\2\u0182\u0181\3"+
		"\2\2\2\u0182\u0183\3\2\2\2\u0183\u0185\3\2\2\2\u0184\u017f\3\2\2\2\u0184"+
		"\u0180\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0187\b/\5\2\u0187`\3\2\2\2\u0188"+
		"\u0189\7\61\2\2\u0189\u018a\7,\2\2\u018a\u018e\3\2\2\2\u018b\u018d\13"+
		"\2\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3\2\2\2\u018e\u018f\3\2\2\2\u018e"+
		"\u018c\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u018e\3\2\2\2\u0191\u0192\7,"+
		"\2\2\u0192\u0193\7\61\2\2\u0193\u0194\3\2\2\2\u0194\u0195\b\60\5\2\u0195"+
		"b\3\2\2\2\u0196\u0197\5\23\t\2\u0197\u0198\3\2\2\2\u0198\u0199\b\61\6"+
		"\2\u0199d\3\2\2\2\u019a\u01a1\5S)\2\u019b\u019d\n\t\2\2\u019c\u019b\3"+
		"\2\2\2\u019d\u019e\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f"+
		"\u01a1\3\2\2\2\u01a0\u019a\3\2\2\2\u01a0\u019c\3\2\2\2\u01a1f\3\2\2\2"+
		"\u01a2\u01a3\5[-\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\b\63\6\2\u01a5\u01a6"+
		"\b\63\7\2\u01a6\u01a7\b\63\4\2\u01a7h\3\2\2\2\u01a8\u01a9\5].\2\u01a9"+
		"\u01aa\3\2\2\2\u01aa\u01ab\b\64\6\2\u01ab\u01ac\b\64\b\2\u01ac\u01ad\b"+
		"\64\4\2\u01adj\3\2\2\2\u01ae\u01af\5+\25\2\u01af\u01b0\3\2\2\2\u01b0\u01b1"+
		"\b\65\t\2\u01b1l\3\2\2\2\u01b2\u01b3\5\17\7\2\u01b3n\3\2\2\2\u01b4\u01b5"+
		"\5\27\13\2\u01b5\u01b6\3\2\2\2\u01b6\u01b7\b\67\n\2\u01b7p\3\2\2\2\u01b8"+
		"\u01b9\5Q(\2\u01b9r\3\2\2\2\u01ba\u01bb\5\r\6\2\u01bb\u01bc\3\2\2\2\u01bc"+
		"\u01bd\b9\6\2\u01bd\u01be\b9\13\2\u01bet\3\2\2\2\u01bf\u01c0\5)\24\2\u01c0"+
		"\u01c1\3\2\2\2\u01c1\u01c2\b:\6\2\u01c2\u01c3\b:\f\2\u01c3v\3\2\2\2\u01c4"+
		"\u01c5\5\21\b\2\u01c5\u01c6\3\2\2\2\u01c6\u01c7\b;\6\2\u01c7\u01c8\b;"+
		"\r\2\u01c8x\3\2\2\2\u01c9\u01ca\5\23\t\2\u01ca\u01cb\3\2\2\2\u01cb\u01cc"+
		"\b<\6\2\u01cc\u01cd\b<\16\2\u01cdz\3\2\2\2\u01ce\u01cf\5#\21\2\u01cf\u01d0"+
		"\3\2\2\2\u01d0\u01d1\b=\6\2\u01d1\u01d2\b=\17\2\u01d2|\3\2\2\2\u01d3\u01d4"+
		"\5\'\23\2\u01d4\u01d5\3\2\2\2\u01d5\u01d6\b>\6\2\u01d6\u01d7\b>\20\2\u01d7"+
		"~\3\2\2\2\u01d8\u01d9\5%\22\2\u01d9\u01da\3\2\2\2\u01da\u01db\b?\6\2\u01db"+
		"\u01dc\b?\21\2\u01dc\u0080\3\2\2\2\36\2\3\4\u00ac\u00b2\u011e\u0126\u0129"+
		"\u0131\u0139\u013d\u0145\u0149\u014e\u0153\u0157\u015c\u015e\u0164\u0169"+
		"\u0170\u0172\u017c\u0182\u0184\u018e\u019e\u01a0\22\7\4\2\7\3\2\2\3\2"+
		"\b\2\2\6\2\2\t-\2\t.\2\t\26\2\t\f\2\t\7\2\t\25\2\t\t\2\t\n\2\t\22\2\t"+
		"\24\2\t\23\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}